@import url("https://fonts.googleapis.com/css2?family=Bricolage+Grotesque:wght@200;300;400;500;600;700;800&display=swap");

/* Performance optimizations */
* {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* Desktop-only optimizations */
html {
    scroll-behavior: smooth;
}

body {
    /* Allow text selection for readable content */
    -webkit-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
}

@media (prefers-reduced-motion: reduce) {
    html {
        scroll-behavior: auto;
    }
    *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* GPU acceleration for common transforms */
.transform-gpu {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
}

/* Performance optimizations for hover effects */
.hover-optimized {
    contain: layout style paint;
    transform: translateZ(0);
    backface-visibility: hidden;
}

/* Reduce paint operations during scroll */
.scroll-optimized {
    contain: layout style;
    will-change: auto;
}

/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
        ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
        *,
        :before,
        :after,
        ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
            --tw-rotate-x: rotateX(0);
            --tw-rotate-y: rotateY(0);
            --tw-rotate-z: rotateZ(0);
            --tw-skew-x: skewX(0);
            --tw-skew-y: skewY(0);
            --tw-scroll-snap-strictness: proximity;
            --tw-space-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-ease: initial;
        }
    }
}

@layer theme {
    :root,
    :host {
        --font-sans:
            ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
            "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono:
            ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
            "Liberation Mono", "Courier New", monospace;
        --color-gray-100: oklch(0.967 0.003 264.542);
        --color-gray-800: oklch(0.278 0.033 256.848);
        --color-black: #000;
        --color-white: #fff;
        --spacing: 0.25rem;
        --container-xs: 20rem;
        --container-md: 28rem;
        --container-4xl: 56rem;
        --text-xs: 0.75rem;
        --text-xs--line-height: calc(1 / 0.75);
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25 / 1.875);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --text-7xl: 4.5rem;
        --text-7xl--line-height: 1;
        --text-8xl: 6rem;
        --text-8xl--line-height: 1;
        --font-weight-normal: 400;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --font-weight-extrabold: 800;
        --leading-tight: 1.25;
        --radius-2xl: 1rem;
        --radius-3xl: 1.5rem;
        --ease-out: cubic-bezier(0, 0, 0.2, 1);
        --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        --blur-md: 12px;
        --blur-lg: 16px;
        --default-transition-duration: 0.15s;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-sans);
        --default-font-feature-settings: var(
            --font-sans--font-feature-settings
        );
        --default-font-variation-settings: var(
            --font-sans--font-variation-settings
        );
        --default-mono-font-family: var(--font-mono);
        --default-mono-font-feature-settings: var(
            --font-mono--font-feature-settings
        );
        --default-mono-font-variation-settings: var(
            --font-mono--font-variation-settings
        );
        --background: #ffffff;
        --foreground: #0f0f10;
        --border: #e5e7eb;
        --ring: #3b82f6;
    }
}

@layer base {
    *,
    :after,
    :before,
    ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    html,
    :host {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(
            --default-font-family,
            ui-sans-serif,
            system-ui,
            sans-serif,
            "Apple Color Emoji",
            "Segoe UI Emoji",
            "Segoe UI Symbol",
            "Noto Color Emoji"
        );
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    body {
        line-height: inherit;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b,
    strong {
        font-weight: bolder;
    }

    code,
    kbd,
    samp,
    pre {
        font-family: var(
            --default-mono-font-family,
            ui-monospace,
            SFMono-Regular,
            Menlo,
            Monaco,
            Consolas,
            "Liberation Mono",
            "Courier New",
            monospace
        );
        font-feature-settings: var(
            --default-mono-font-feature-settings,
            normal
        );
        font-variation-settings: var(
            --default-mono-font-variation-settings,
            normal
        );
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub,
    sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative;
    }

    sub {
        bottom: -0.25em;
    }

    sup {
        top: -0.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol,
    ul,
    menu {
        list-style: none;
    }

    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        vertical-align: middle;
        display: block;
    }

    img,
    video {
        max-width: 100%;
        height: auto;
    }

    button,
    input,
    select,
    optgroup,
    textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
        color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
        ::placeholder {
            color: color-mix(in oklab, currentColor 50%, transparent);
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-year-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-month-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-day-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-hour-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-minute-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-second-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button,
    input:where([type="button"], [type="reset"], [type="submit"]) {
        appearance: button;
    }

    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button {
        height: auto;
    }

    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }

    * {
        border-color: var(--border);
        outline-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    body {
        background-color: transparent;
        color: #0f0f10;
        font-family:
            "Bricolage Grotesque",
            -apple-system,
            BlinkMacSystemFont,
            Segoe UI,
            sans-serif;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
        font-size: var(--text-2xl);
        font-weight: var(--font-weight-extrabold);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
        font-size: var(--text-xl);
        font-weight: var(--font-weight-extrabold);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
        font-size: var(--text-lg);
        font-weight: var(--font-weight-extrabold);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
        font-size: var(--text-base);
        font-weight: var(--font-weight-extrabold);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
        font-size: var(--text-base);
        font-weight: var(--font-weight-normal);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label,
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
        font-size: var(--text-base);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
        font-size: var(--text-base);
        font-weight: var(--font-weight-normal);
        line-height: 1.5;
    }
}

@layer utilities {
    .invisible {
        visibility: hidden;
    }

    .absolute {
        position: absolute;
    }

    .fixed {
        position: fixed;
    }

    .relative {
        position: relative;
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .top-0 {
        top: calc(var(--spacing) * 0);
    }

    .top-1\/2 {
        top: 50%;
    }

    .right-0 {
        right: calc(var(--spacing) * 0);
    }

    .bottom-0 {
        bottom: calc(var(--spacing) * 0);
    }

    .left-0 {
        left: calc(var(--spacing) * 0);
    }

    .z-10 {
        z-index: 10;
    }

    .z-50 {
        z-index: 50;
    }

    .container {
        width: 100%;
    }

    @media (width >= 40rem) {
        .container {
            max-width: 40rem;
        }
    }

    @media (width >= 48rem) {
        .container {
            max-width: 48rem;
        }
    }

    @media (width >= 64rem) {
        .container {
            max-width: 64rem;
        }
    }

    @media (width >= 80rem) {
        .container {
            max-width: 80rem;
        }
    }

    @media (width >= 96rem) {
        .container {
            max-width: 96rem;
        }
    }

    .mx-auto {
        margin-inline: auto;
    }

    .mt-8 {
        margin-top: calc(var(--spacing) * 8);
    }

    .mt-12 {
        margin-top: calc(var(--spacing) * 12);
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing) * 6);
    }

    .mb-8 {
        margin-bottom: calc(var(--spacing) * 8);
    }

    .mb-12 {
        margin-bottom: calc(var(--spacing) * 12);
    }

    .mb-16 {
        margin-bottom: calc(var(--spacing) * 16);
    }

    .mb-20 {
        margin-bottom: calc(var(--spacing) * 20);
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
    }

    .hidden {
        display: none;
    }

    .inline-block {
        display: inline-block;
    }

    .aspect-\[3\/4\] {
        aspect-ratio: 3 / 4;
    }

    .h-1 {
        height: calc(var(--spacing) * 1);
    }

    .h-1\.5 {
        height: calc(var(--spacing) * 1.5);
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .h-5 {
        height: calc(var(--spacing) * 5);
    }

    .h-6 {
        height: calc(var(--spacing) * 6);
    }

    .h-20 {
        height: calc(var(--spacing) * 20);
    }

    .h-full {
        height: 100%;
    }

    .min-h-screen {
        min-height: 100vh;
    }

    .w-1\.5 {
        width: calc(var(--spacing) * 1.5);
    }

    .w-4 {
        width: calc(var(--spacing) * 4);
    }

    .w-5 {
        width: calc(var(--spacing) * 5);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .w-12 {
        width: calc(var(--spacing) * 12);
    }

    .w-32 {
        width: calc(var(--spacing) * 32);
    }

    .w-\[350px\] {
        width: 350px;
    }

    .w-\[420px\] {
        width: 420px;
    }

    .w-full {
        width: 100%;
    }

    .max-w-4xl {
        max-width: var(--container-4xl);
    }

    .max-w-\[1400px\] {
        max-width: 1400px;
    }

    .max-w-\[1600px\] {
        max-width: 1600px;
    }

    .max-w-md {
        max-width: var(--container-md);
    }

    .max-w-xs {
        max-width: var(--container-xs);
    }

    .flex-1 {
        flex: 1;
    }

    .flex-shrink-0 {
        flex-shrink: 0;
    }

    .-translate-x-4 {
        --tw-translate-x: calc(var(--spacing) * -4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-4 {
        --tw-translate-x: calc(var(--spacing) * 4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-y-1\/2 {
        --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .scale-105 {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }

    .transform {
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
            var(--tw-skew-x) var(--tw-skew-y);
    }

    .animate-pulse {
        animation: var(--animate-pulse);
    }

    .cursor-grab {
        cursor: grab;
    }

    .snap-x {
        scroll-snap-type: x var(--tw-scroll-snap-strictness);
    }

    .snap-mandatory {
        --tw-scroll-snap-strictness: mandatory;
    }

    .snap-center {
        scroll-snap-align: center;
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .flex-col {
        flex-direction: column;
    }

    .items-center {
        align-items: center;
    }

    .items-end {
        align-items: flex-end;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-6 {
        gap: calc(var(--spacing) * 6);
    }

    .gap-8 {
        gap: calc(var(--spacing) * 8);
    }

    .gap-12 {
        gap: calc(var(--spacing) * 12);
    }

    .gap-16 {
        gap: calc(var(--spacing) * 16);
    }

    :where(.space-y-6 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(
            calc(var(--spacing) * 6) * var(--tw-space-y-reverse)
        );
        margin-block-end: calc(
            calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse))
        );
    }

    .self-start {
        align-self: flex-start;
    }

    .overflow-hidden {
        overflow: hidden;
    }

    .overflow-x-auto {
        overflow-x: auto;
    }

    .scroll-smooth {
        scroll-behavior: smooth;
    }

    .rounded-2xl {
        border-radius: var(--radius-2xl);
    }

    .rounded-3xl {
        border-radius: var(--radius-3xl);
    }

    .rounded-full {
        border-radius: 3.40282e38px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .border-white\/10 {
        border-color: #ffffff1a;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .border-white\/10 {
            border-color: color-mix(
                in oklab,
                var(--color-white) 10%,
                transparent
            );
        }
    }

    .bg-\[\#0a0a0a\] {
        background-color: #0a0a0a;
    }

    .bg-\[\#1a1a1a\] {
        background-color: #1a1a1a;
    }

    .bg-\[\#2561F9\] {
        background-color: #2561f9;
    }

    .bg-\[\#F9A825\] {
        background-color: #f59922;
    }

    .bg-black {
        background-color: var(--color-black);
    }

    .bg-gray-100 {
        background-color: var(--color-gray-100);
    }

    .bg-gray-800 {
        background-color: var(--color-gray-800);
    }

    .bg-transparent {
        background-color: #0000;
    }

    .bg-white {
        background-color: var(--color-white);
    }

    .bg-white\/10 {
        background-color: #ffffff1a;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/10 {
            background-color: color-mix(
                in oklab,
                var(--color-white) 10%,
                transparent
            );
        }
    }

    .bg-white\/30 {
        background-color: #ffffff4d;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/30 {
            background-color: color-mix(
                in oklab,
                var(--color-white) 30%,
                transparent
            );
        }
    }

    .bg-gradient-to-b {
        --tw-gradient-position: to bottom in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-gradient-to-t {
        --tw-gradient-position: to top in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .from-black\/60 {
        --tw-gradient-from: #0009;
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-black\/60 {
            --tw-gradient-from: color-mix(
                in oklab,
                var(--color-black) 60%,
                transparent
            );
        }
    }

    .from-black\/80 {
        --tw-gradient-from: #000c;
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-black\/80 {
            --tw-gradient-from: color-mix(
                in oklab,
                var(--color-black) 80%,
                transparent
            );
        }
    }

    .via-black\/20 {
        --tw-gradient-via: #0003;
        --tw-gradient-via-stops:
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .via-black\/20 {
            --tw-gradient-via: color-mix(
                in oklab,
                var(--color-black) 20%,
                transparent
            );
        }
    }

    .via-black\/30 {
        --tw-gradient-via: #0000004d;
        --tw-gradient-via-stops:
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .via-black\/30 {
            --tw-gradient-via: color-mix(
                in oklab,
                var(--color-black) 30%,
                transparent
            );
        }
    }

    .via-black\/40 {
        --tw-gradient-via: #0006;
        --tw-gradient-via-stops:
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .via-black\/40 {
            --tw-gradient-via: color-mix(
                in oklab,
                var(--color-black) 40%,
                transparent
            );
        }
    }

    .to-black\/70 {
        --tw-gradient-to: #000000b3;
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-black\/70 {
            --tw-gradient-to: color-mix(
                in oklab,
                var(--color-black) 70%,
                transparent
            );
        }
    }

    .to-transparent {
        --tw-gradient-to: transparent;
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }

    .object-cover {
        object-fit: cover;
    }

    .object-center {
        object-position: center;
    }

    .p-3 {
        padding: calc(var(--spacing) * 3);
    }

    .p-8 {
        padding: calc(var(--spacing) * 8);
    }

    .p-10 {
        padding: calc(var(--spacing) * 10);
    }

    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .px-8 {
        padding-inline: calc(var(--spacing) * 8);
    }

    .py-2\.5 {
        padding-block: calc(var(--spacing) * 2.5);
    }

    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }

    .py-6 {
        padding-block: calc(var(--spacing) * 6);
    }

    .py-16 {
        padding-block: calc(var(--spacing) * 16);
    }

    .py-24 {
        padding-block: calc(var(--spacing) * 24);
    }

    .py-32 {
        padding-block: calc(var(--spacing) * 32);
    }

    .pb-8 {
        padding-bottom: calc(var(--spacing) * 8);
    }

    .text-center {
        text-align: center;
    }

    .text-right {
        text-align: right;
    }

    .align-middle {
        vertical-align: middle;
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }

    .text-5xl {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading, var(--text-5xl--line-height));
    }

    .text-6xl {
        font-size: var(--text-6xl);
        line-height: var(--tw-leading, var(--text-6xl--line-height));
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .leading-tight {
        --tw-leading: var(--leading-tight);
        line-height: var(--leading-tight);
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .font-extrabold {
        --tw-font-weight: var(--font-weight-extrabold);
        font-weight: var(--font-weight-extrabold);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .text-\[\#2561F9\] {
        color: #2561f9;
    }

    .text-\[\#F9A825\] {
        color: #f59922;
    }

    .text-white {
        color: var(--color-white);
    }

    .text-white\/40 {
        color: #fff6;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .text-white\/40 {
            color: color-mix(in oklab, var(--color-white) 40%, transparent);
        }
    }

    .text-white\/50 {
        color: #ffffff80;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .text-white\/50 {
            color: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
    }

    .text-white\/60 {
        color: #fff9;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .text-white\/60 {
            color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
    }

    .text-white\/70 {
        color: #ffffffb3;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .text-white\/70 {
            color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
    }

    .text-white\/80 {
        color: #fffc;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .text-white\/80 {
            color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
    }

    .text-white\/90 {
        color: #ffffffe6;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .text-white\/90 {
            color: color-mix(in oklab, var(--color-white) 90%, transparent);
        }
    }

    .opacity-0 {
        opacity: 0;
    }

    .opacity-50 {
        opacity: 0.5;
    }

    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .ring-2 {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
            calc(2px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentcolor);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .ring-\[\#F9A825\] {
        --tw-ring-color: #f59922;
    }

    .backdrop-blur-lg {
        --tw-backdrop-blur: blur(var(--blur-lg));
        -webkit-backdrop-filter: var(--tw-backdrop-blur,)
            var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
            var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
            var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
            var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
            var(--tw-backdrop-sepia,);
    }

    .backdrop-blur-md {
        --tw-backdrop-blur: blur(var(--blur-md));
        -webkit-backdrop-filter: var(--tw-backdrop-blur,)
            var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
            var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
            var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-sate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
            var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
            var(--tw-backdrop-sepia,);
    }

    .transition {
        transition-property:
            color,
            background-color,
            border-color,
            outline-color,
            text-decoration-color,
            fill,
            stroke,
            --tw-gradient-from,
            --tw-gradient-via,
            --tw-gradient-to,
            opacity,
            box-shadow,
            transform,
            translate,
            scale,
            rotate,
            filter,
            -webkit-backdrop-filter,
            backdrop-filter;
        transition-timing-function: var(
            --tw-ease,
            var(--default-transition-timing-function)
        );
        transition-duration: var(
            --tw-duration,
            var(--default-transition-duration)
        );
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(
            --tw-ease,
            var(--default-transition-timing-function)
        );
        transition-duration: var(
            --tw-duration,
            var(--default-transition-duration)
        );
    }

    .transition-colors {
        transition-property:
            color, background-color, border-color, outline-color,
            text-decoration-color, fill, stroke, --tw-gradient-from,
            --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(
            --tw-ease,
            var(--default-transition-timing-function)
        );
        transition-duration: var(
            --tw-duration,
            var(--default-transition-duration)
        );
    }

    .transition-opacity {
        transition-property: opacity;
        transition-timing-function: var(
            --tw-ease,
            var(--default-transition-timing-function)
        );
        transition-duration: var(
            --tw-duration,
            var(--default-transition-duration)
        );
    }

    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(
            --tw-ease,
            var(--default-transition-timing-function)
        );
        transition-duration: var(
            --tw-duration,
            var(--default-transition-duration)
        );
    }

    .duration-300 {
        --tw-duration: 0.3s;
        transition-duration: 0.3s;
    }

    .duration-500 {
        --tw-duration: 0.5s;
        transition-duration: 0.5s;
    }

    .duration-700 {
        --tw-duration: 0.7s;
        transition-duration: 0.7s;
    }

    .ease-out {
        --tw-ease: var(--ease-out);
        transition-timing-function: var(--ease-out);
    }

    @media (hover: hover) {
        .group-hover\:scale-110:is(:where(.group):hover *) {
            --tw-scale-x: 110%;
            --tw-scale-y: 110%;
            --tw-scale-z: 110%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
    }

    @media (hover: hover) {
        .group-hover\:opacity-100:is(:where(.group):hover *) {
            opacity: 1;
        }
    }

    @media (hover: hover) {
        .hover\:bg-\[\#e89a1f\]:hover {
            background-color: #e89a1f;
        }
    }

    @media (hover: hover) {
        .hover\:bg-white\/20:hover {
            background-color: #fff3;
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-white\/20:hover {
                background-color: color-mix(
                    in oklab,
                    var(--color-white) 20%,
                    transparent
                );
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-white\/50:hover {
            background-color: #ffffff80;
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-white\/50:hover {
                background-color: color-mix(
                    in oklab,
                    var(--color-white) 50%,
                    transparent
                );
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-white\/95:hover {
            background-color: #fffffff2;
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-white\/95:hover {
                background-color: color-mix(
                    in oklab,
                    var(--color-white) 95%,
                    transparent
                );
            }
        }
    }

    @media (hover: hover) {
        .hover\:text-white:hover {
            color: var(--color-white);
        }
    }

    @media (hover: hover) {
        .hover\:opacity-75:hover {
            opacity: 0.75;
        }
    }

    .active\:cursor-grabbing:active {
        cursor: grabbing;
    }

    @media (width >= 48rem) {
        .md\:flex {
            display: flex;
        }
    }

    @media (width >= 48rem) {
        .md\:h-24 {
            height: calc(var(--spacing) * 24);
        }
    }

    @media (width >= 48rem) {
        .md\:w-\[420px\] {
            width: 420px;
        }
    }

    @media (width >= 48rem) {
        .md\:w-\[450px\] {
            width: 450px;
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:text-6xl {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading, var(--text-6xl--line-height));
        }
    }

    @media (width >= 48rem) {
        .md\:text-7xl {
            font-size: var(--text-7xl);
            line-height: var(--tw-leading, var(--text-7xl--line-height));
        }
    }

    @media (width >= 64rem) {
        .lg\:flex {
            display: flex;
        }
    }

    @media (width >= 64rem) {
        .lg\:text-7xl {
            font-size: var(--text-7xl);
            line-height: var(--tw-leading, var(--text-7xl--line-height));
        }
    }

    @media (width >= 64rem) {
        .lg\:text-8xl {
            font-size: var(--text-8xl);
            line-height: var(--tw-leading, var(--text-8xl--line-height));
        }
    }
}

:root {
    --font-size: 16px;
    --background: #f9f5f0;
    --foreground: #000000;
    --card: #f2ebe3;
    --card-foreground: #000000;
    --popover: #ffffff;
    --popover-foreground: #000000;
    --primary: #060a0f;
    --primary-foreground: #ffffff;
    --secondary: #f0f0f0;
    --secondary-foreground: #333333;
    --muted: #ececf0;
    --muted-foreground: #555555;
    --accent: #060a0f;
    --accent-foreground: #ffffff;
    --destructive: #d4183d;
    --destructive-foreground: #ffffff;
    --border: #e0dace;
    --input: transparent;
    --input-background: #f3f3f5;
    --switch-background: #cbcecb;
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --ring: #d1c3b4;
    --chart-1: oklch(0.646 0.222 41.116);
    --chart-2: oklch(0.6 0.118 184.704);
    --chart-3: oklch(0.398 0.07 227.392);
    --chart-4: oklch(0.828 0.189 84.429);
    --chart-5: oklch(0.769 0.188 70.08);
    --radius: 0.625rem;
    --sidebar: #fcfbf9;
    --sidebar-foreground: #000000;
    --sidebar-primary: #060a0f;
    --sidebar-primary-foreground: #ffffff;
    --sidebar-accent: #e0dace;
    --sidebar-accent-foreground: #000000;
    --sidebar-border: #d1c3b4;
    --sidebar-ring: #c0b2a3;
}

.dark {
    --background: oklch(0.145 0 0);
    --foreground: oklch(0.985 0 0);
    --card: oklch(0.145 0 0);
    --card-foreground: oklch(0.985 0 0);
    --popover: oklch(0.145 0 0);
    --popover-foreground: oklch(0.985 0 0);
    --primary: oklch(0.985 0 0);
    --primary-foreground: oklch(0.205 0 0);
    --secondary: oklch(0.269 0 0);
    --secondary-foreground: oklch(0.985 0 0);
    --muted: oklch(0.269 0 0);
    --muted-foreground: oklch(0.708 0 0);
    --accent: oklch(0.269 0 0);
    --accent-foreground: oklch(0.985 0 0);
    --destructive: oklch(0.396 0.141 25.723);
    --destructive-foreground: oklch(0.637 0.237 25.331);
    --border: oklch(0.269 0 0);
    --input: oklch(0.269 0 0);
    --ring: oklch(0.439 0 0);
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --chart-1: oklch(0.488 0.243 264.376);
    --chart-2: oklch(0.696 0.17 162.48);
    --chart-3: oklch(0.769 0.188 70.08);
    --chart-4: oklch(0.627 0.265 303.9);
    --chart-5: oklch(0.645 0.246 16.439);
    --sidebar: oklch(0.205 0 0);
    --sidebar-foreground: oklch(0.985 0 0);
    --sidebar-primary: oklch(0.488 0.243 264.376);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.269 0 0);
    --sidebar-accent-foreground: oklch(0.985 0 0);
    --sidebar-border: oklch(0.269 0 0);
    --sidebar-ring: oklch(0.439 0 0);
}

html {
    font-size: var(--font-size);
}

.frosted-glass-header {
    background-color: rgba(255, 255, 255, 0.15) !important;
    backdrop-filter: blur(20px) !important;
    -webkit-backdrop-filter: blur(20px) !important;
    border-bottom: 1px solid rgba(255, 255, 255, 0.4) !important;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1) !important;
}

.glass-button {
    background:
        linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.3),
            rgba(255, 255, 255, 0.1)
        ),
        rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(20px);
    border-radius: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.4);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    color: #000000;
    font-weight: 600;
    letter-spacing: 0.3px;
    font-size: 16px;
    transition: all 0.3s ease;
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    padding: 0.75rem 1.5rem;
}

.glass-button:hover {
    transform: scale(1.05);
    background:
        linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.4),
            rgba(255, 255, 255, 0.2)
        ),
        rgba(255, 255, 255, 0.3);
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    initial-value: rotateX(0);
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    initial-value: rotateY(0);
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    initial-value: rotateZ(0);
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
    initial-value: skewX(0);
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
    initial-value: skewY(0);
}

@property --tw-scroll-snap-strictness {
    syntax: "*";
    inherits: false;
    initial-value: proximity;
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-leading {
    syntax: "*";
    inherits: false;
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-duration {
    syntax: "*";
    inherits: false;
}

@property --tw-ease {
    syntax: "*";
    inherits: false;
}

@keyframes pulse {
    50% {
        opacity: 0.5;
    }
}

/* Polaroid Card Styles */
.polaroid-card {
    background: linear-gradient(145deg, #fefefe 0%, #f8f8f8 100%);
    border: 1px solid #e8e8e8;
    transform-style: preserve-3d;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.polaroid-card:hover {
    transform: translateY(-8px) rotateX(5deg) rotateY(5deg);
    box-shadow:
        0 25px 50px rgba(0, 0, 0, 0.25),
        0 10px 25px rgba(0, 0, 0, 0.15),
        0 5px 15px rgba(0, 0, 0, 0.1);
}

/* Film grain texture */
.film-grain::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.15;
    background-image:
        radial-gradient(
            circle at 20% 50%,
            transparent 20%,
            rgba(255, 255, 255, 0.3) 21%,
            rgba(255, 255, 255, 0.3) 34%,
            transparent 35%,
            transparent
        ),
        linear-gradient(
            0deg,
            transparent 24%,
            rgba(255, 255, 255, 0.05) 25%,
            rgba(255, 255, 255, 0.05) 26%,
            transparent 27%,
            transparent 74%,
            rgba(255, 255, 255, 0.05) 75%,
            rgba(255, 255, 255, 0.05) 76%,
            transparent 77%,
            transparent
        );
    pointer-events: none;
}

/* Enhanced shadow utilities */
.shadow-3xl {
    box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25);
}

/* ===== MOBILE OPTIMIZATION UTILITIES ===== */

/* Touch-friendly button sizes */
.touch-target {
    min-height: 44px;
    min-width: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Mobile-optimized containers */
.mobile-container {
    padding-left: 1rem;
    padding-right: 1rem;
}

@media (max-width: 640px) {
    .mobile-container {
        padding-left: 0.75rem;
        padding-right: 0.75rem;
    }
}

/* Mobile typography scaling */
.mobile-heading-xl {
    font-size: clamp(2rem, 8vw, 4rem);
    line-height: 1.1;
}

.mobile-heading-lg {
    font-size: clamp(1.5rem, 6vw, 3rem);
    line-height: 1.2;
}

.mobile-heading-md {
    font-size: clamp(1.25rem, 4vw, 2rem);
    line-height: 1.3;
}

.mobile-text-lg {
    font-size: clamp(1rem, 3vw, 1.25rem);
    line-height: 1.5;
}

.mobile-text-base {
    font-size: clamp(0.875rem, 2.5vw, 1rem);
    line-height: 1.6;
}

/* Mobile-specific spacing */
.mobile-py-sm { padding-top: 1rem; padding-bottom: 1rem; }
.mobile-py-md { padding-top: 2rem; padding-bottom: 2rem; }
.mobile-py-lg { padding-top: 3rem; padding-bottom: 3rem; }
.mobile-py-xl { padding-top: 4rem; padding-bottom: 4rem; }

.mobile-px-sm { padding-left: 1rem; padding-right: 1rem; }
.mobile-px-md { padding-left: 1.5rem; padding-right: 1.5rem; }

.mobile-mb-sm { margin-bottom: 1rem; }
.mobile-mb-md { margin-bottom: 2rem; }
.mobile-mb-lg { margin-bottom: 3rem; }

/* Mobile grid utilities */
.mobile-grid-1 { display: grid; grid-template-columns: 1fr; gap: 1rem; }
.mobile-grid-2 { display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem; }

@media (max-width: 640px) {
    .mobile-grid-2 { grid-template-columns: 1fr; }
}

/* Mobile flexbox utilities */
.mobile-flex-col { 
    display: flex; 
    flex-direction: column; 
    gap: 1rem; 
}

.mobile-flex-center { 
    display: flex; 
    align-items: center; 
    justify-content: center; 
}

/* Mobile card optimizations */
.mobile-card {
    border-radius: 1rem;
    padding: 1.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

@media (max-width: 640px) {
    .mobile-card {
        border-radius: 0.75rem;
        padding: 1rem;
    }
}

/* Mobile animation optimizations */
@media (max-width: 768px) {
    .mobile-reduce-motion * {
        animation-duration: 0.3s !important;
        transition-duration: 0.2s !important;
    }
}

/* Mobile scroll optimizations */
.mobile-scroll-smooth {
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
}

/* Mobile touch improvements */
.mobile-touch-action {
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
}

/* Mobile safe areas for notched devices */
.mobile-safe-top {
    padding-top: env(safe-area-inset-top);
}

.mobile-safe-bottom {
    padding-bottom: env(safe-area-inset-bottom);
}

/* Mobile-specific visibility utilities */
@media (max-width: 768px) {
    .mobile-hidden { display: none !important; }
    .mobile-visible { display: block !important; }
}

@media (min-width: 769px) {
    .desktop-hidden { display: none !important; }
    .desktop-visible { display: block !important; }
}

/* Mobile performance optimizations */
.mobile-gpu-accelerated {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
    will-change: transform;
}

/* Mobile image optimizations */
.mobile-img-responsive {
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: 0.5rem;
}

/* Mobile button optimizations */
.mobile-btn {
    min-height: 48px;
    padding: 0.75rem 1.5rem;
    border-radius: 0.75rem;
    font-weight: 600;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
    transition: all 0.2s ease-out;
}

.mobile-btn:active {
    transform: scale(0.98);
}

@media (max-width: 640px) {
    .mobile-btn {
        min-height: 44px;
        padding: 0.625rem 1.25rem;
        font-size: 0.9rem;
    }
}
/* D
arkVeil fallback animation */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
/* ===
== COMPREHENSIVE RESPONSIVE DESIGN ===== */
/* Make web version fully adaptive for all screen sizes */

/* Ultra-wide screens (1920px+) */
@media (min-width: 1920px) {
  .max-w-\[1400px\] {
    max-width: 1600px;
  }
  
  .max-w-\[1600px\] {
    max-width: 1800px;
  }
  
  /* Scale up font sizes for ultra-wide */
  .text-5xl {
    font-size: 4rem;
  }
  
  .text-6xl {
    font-size: 5rem;
  }
  
  .text-7xl {
    font-size: 6rem;
  }
  
  .text-8xl {
    font-size: 7rem;
  }
}

/* Large desktop screens (1440px - 1919px) */
@media (min-width: 1440px) and (max-width: 1919px) {
  .max-w-\[1400px\] {
    max-width: 1400px;
  }
  
  .max-w-\[1600px\] {
    max-width: 1500px;
  }
}

/* Standard desktop screens (1200px - 1439px) */
@media (min-width: 1200px) and (max-width: 1439px) {
  .max-w-\[1400px\] {
    max-width: 1200px;
  }
  
  .max-w-\[1600px\] {
    max-width: 1300px;
  }
}

/* Medium desktop screens (1024px - 1199px) */
@media (min-width: 1024px) and (max-width: 1199px) {
  .max-w-\[1400px\] {
    max-width: 1000px;
  }
  
  .max-w-\[1600px\] {
    max-width: 1100px;
  }
  
  /* Adjust font sizes for medium screens */
  .text-6xl {
    font-size: 3.5rem;
  }
  
  .text-7xl {
    font-size: 4rem;
  }
  
  .text-8xl {
    font-size: 4.5rem;
  }
}

/* Small desktop/large tablet screens (768px - 1023px) */
@media (min-width: 768px) and (max-width: 1023px) {
  .max-w-\[1400px\] {
    max-width: 95%;
  }
  
  .max-w-\[1600px\] {
    max-width: 95%;
  }
  
  /* Adjust font sizes for tablet */
  .text-5xl {
    font-size: 2.5rem;
  }
  
  .text-6xl {
    font-size: 3rem;
  }
  
  .text-7xl {
    font-size: 3.5rem;
  }
  
  .text-8xl {
    font-size: 4rem;
  }
  
  /* Adjust padding for tablet */
  .px-8 {
    padding-inline: calc(var(--spacing) * 4);
  }
  
  .py-24 {
    padding-block: calc(var(--spacing) * 16);
  }
  
  .py-32 {
    padding-block: calc(var(--spacing) * 20);
  }
}

/* Mobile screens (320px - 767px) */
@media (max-width: 767px) {
  .max-w-\[1400px\] {
    max-width: 100%;
    padding-inline: 1rem;
  }
  
  .max-w-\[1600px\] {
    max-width: 100%;
    padding-inline: 1rem;
  }
  
  /* Mobile font sizes */
  .text-2xl {
    font-size: 1.25rem;
  }
  
  .text-3xl {
    font-size: 1.5rem;
  }
  
  .text-5xl {
    font-size: 2rem;
  }
  
  .text-6xl {
    font-size: 2.25rem;
  }
  
  .text-7xl {
    font-size: 2.5rem;
  }
  
  .text-8xl {
    font-size: 3rem;
  }
  
  /* Mobile padding adjustments */
  .px-8 {
    padding-inline: 1rem;
  }
  
  .py-24 {
    padding-block: calc(var(--spacing) * 12);
  }
  
  .py-32 {
    padding-block: calc(var(--spacing) * 16);
  }
  
  .p-8 {
    padding: calc(var(--spacing) * 4);
  }
  
  .p-10 {
    padding: calc(var(--spacing) * 6);
  }
  
  /* Mobile gap adjustments */
  .gap-16 {
    gap: calc(var(--spacing) * 8);
  }
  
  .gap-12 {
    gap: calc(var(--spacing) * 6);
  }
  
  .gap-8 {
    gap: calc(var(--spacing) * 4);
  }
}

/* Extra small mobile screens (320px - 479px) */
@media (max-width: 479px) {
  .text-5xl {
    font-size: 1.75rem;
  }
  
  .text-6xl {
    font-size: 2rem;
  }
  
  .text-7xl {
    font-size: 2.25rem;
  }
  
  .text-8xl {
    font-size: 2.5rem;
  }
  
  .px-8 {
    padding-inline: 0.75rem;
  }
}

/* Viewport height adjustments for short screens */
@media (max-height: 600px) {
  .py-24 {
    padding-block: calc(var(--spacing) * 8);
  }
  
  .py-32 {
    padding-block: calc(var(--spacing) * 12);
  }
  
  .min-h-screen {
    min-height: 100vh;
  }
}

/* High DPI screens */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .polaroid-card {
    border-width: 0.5px;
  }
  
  .glass-button {
    border-width: 0.5px;
  }
}

/* Landscape orientation adjustments */
@media (orientation: landscape) and (max-height: 500px) {
  .py-24 {
    padding-block: calc(var(--spacing) * 6);
  }
  
  .py-32 {
    padding-block: calc(var(--spacing) * 8);
  }
}

/* Container width adjustments for all screen sizes */
.container {
  width: 100%;
  margin-inline: auto;
  padding-inline: 1rem;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
    padding-inline: 1.5rem;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
    padding-inline: 2rem;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
    padding-inline: 2rem;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
    padding-inline: 2rem;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
    padding-inline: 2rem;
  }
}

@media (min-width: 1920px) {
  .container {
    max-width: 1800px;
    padding-inline: 3rem;
  }
}

/* Fluid typography for better scaling */
.text-fluid-sm {
  font-size: clamp(0.875rem, 2vw, 1rem);
}

.text-fluid-base {
  font-size: clamp(1rem, 2.5vw, 1.125rem);
}

.text-fluid-lg {
  font-size: clamp(1.125rem, 3vw, 1.25rem);
}

.text-fluid-xl {
  font-size: clamp(1.25rem, 3.5vw, 1.5rem);
}

.text-fluid-2xl {
  font-size: clamp(1.5rem, 4vw, 2rem);
}

.text-fluid-3xl {
  font-size: clamp(1.875rem, 5vw, 2.5rem);
}

.text-fluid-4xl {
  font-size: clamp(2.25rem, 6vw, 3rem);
}

.text-fluid-5xl {
  font-size: clamp(3rem, 7vw, 4rem);
}

.text-fluid-6xl {
  font-size: clamp(3.75rem, 8vw, 5rem);
}

.text-fluid-7xl {
  font-size: clamp(4.5rem, 9vw, 6rem);
}

.text-fluid-8xl {
  font-size: clamp(6rem, 10vw, 8rem);
}

/* Responsive spacing utilities */
.space-fluid-sm {
  gap: clamp(0.5rem, 2vw, 1rem);
}

.space-fluid-md {
  gap: clamp(1rem, 3vw, 2rem);
}

.space-fluid-lg {
  gap: clamp(1.5rem, 4vw, 3rem);
}

.space-fluid-xl {
  gap: clamp(2rem, 5vw, 4rem);
}

/* Ensure full width utilization */
.w-screen {
  width: 100vw;
}

.max-w-screen {
  max-width: 100vw;
}

/* Prevent horizontal overflow */
html, body {
  overflow-x: hidden;
  max-width: 100vw;
}

/* Responsive grid adjustments */
@media (max-width: 640px) {
  .grid-cols-2 {
    grid-template-columns: 1fr;
  }
  
  .md\:grid-cols-2 {
    grid-template-columns: 1fr;
  }
  
  .md\:grid-cols-4 {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 641px) and (max-width: 1023px) {
  .md\:grid-cols-4 {
    grid-template-columns: repeat(3, 1fr);
  }
}/
* Simple loading spinner animation */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}